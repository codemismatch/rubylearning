✓ Alchemist development environment activated!
✓ The 'alc' command is now available in this terminal session.
✓ When you're done, you can deactivate by closing this terminal or running:
  - unset ALCHEMIST_ROOT
  - Remove Alchemist paths from PATH and EMACSLOADPATH
themes/rubylearning/layouts/default.html:14:  <link href="https://fonts.googleapis.com/css2?family=Fira+Sans:wght@400;500;700&family=JetBrains+Mono:wght@400;700&display=swap" rel="stylesheet">
themes/rubylearning/layouts/default.html:16:  <!-- Syntax highlighting -->
themes/rubylearning/layouts/default.html:17:  <link rel="stylesheet" href="<%= asset_path('css/prism-monokai.css') %>">
themes/rubylearning/layouts/default.html:123:        <p>&copy; <%= Time.now.year %> Ruby Learning. Built with Typophic.</p>
themes/rubylearning/layouts/default.html:129:  <script src="<%= asset_path('js/prism.js') %>"></script>
themes/rubylearning/layouts/default.html:130:  <script src="<%= asset_path('js/prism-ruby.js') %>"></script>
themes/rubylearning/layouts/default.html:131:  <script src="<%= asset_path('js/prism-markdown.js') %>"></script>
themes/rubylearning/layouts/default.html:148:      // Initialize Prism.js syntax highlighting
themes/rubylearning/layouts/default.html:149:      if (typeof Prism !== 'undefined') {
themes/rubylearning/layouts/default.html:150:        Prism.highlightAll();
docs/HANDOFF.md:4:- Homepage layout now pulls real data and uses focused copy: hero text revised, feature cards rewritten, “Popular topics” pulls from `site.tags`, “Latest Tutorials” sorts posts by date, learning path links to live lessons, and community CTA updated.
docs/HANDOFF.md:25:- Run a QA pass (links, copy, accessibility) before release.
docs/HANDOFF.md:60:- Styles reverted to the original code window/run button look as requested.
themes/rubylearning/js/prism-ruby.js:2: * Ruby language support for Prism.js
themes/rubylearning/js/prism-ruby.js:4:(function (Prism) {
themes/rubylearning/js/prism-ruby.js:5:	Prism.languages.ruby = Prism.languages.extend('clike', {
themes/rubylearning/js/prism-ruby.js:25:	Prism.languages.insertBefore('ruby', 'number', {
themes/rubylearning/js/prism-ruby.js:30:	Prism.languages.ruby.string = [
themes/rubylearning/js/prism-ruby.js:42:						rest: Prism.languages.ruby
themes/rubylearning/js/prism-ruby.js:58:						rest: Prism.languages.ruby
themes/rubylearning/js/prism-ruby.js:74:						rest: Prism.languages.ruby
themes/rubylearning/js/prism-ruby.js:90:						rest: Prism.languages.ruby
themes/rubylearning/js/prism-ruby.js:106:						rest: Prism.languages.ruby
themes/rubylearning/js/prism-ruby.js:122:						rest: Prism.languages.ruby
themes/rubylearning/js/prism-ruby.js:146:						rest: Prism.languages.ruby
themes/rubylearning/js/prism-ruby.js:184:						rest: Prism.languages.ruby
themes/rubylearning/js/prism-ruby.js:191:	Prism.languages.rb = Prism.languages.ruby;
themes/rubylearning/js/prism-ruby.js:192:}(Prism));
themes/rubylearning/layouts/page.html:11:  <link href="https://fonts.googleapis.com/css2?family=Fira+Sans:wght@400;500;700&family=JetBrains+Mono:wght@400;700&display=swap" rel="stylesheet">
themes/rubylearning/layouts/page.html:12:  <link rel="stylesheet" href="<%= asset_path('css/prism-monokai.css') %>">
themes/rubylearning/layouts/page.html:123:        <p>&copy; <%= Time.now.year %> Ruby Learning. Built with Typophic.</p>
themes/rubylearning/layouts/page.html:128:  <script src="<%= asset_path('js/prism.js') %>"></script>
themes/rubylearning/layouts/page.html:129:  <script src="<%= asset_path('js/prism-ruby.js') %>"></script>
themes/rubylearning/layouts/page.html:130:  <script src="<%= asset_path('js/prism-markdown.js') %>"></script>
themes/rubylearning/layouts/page.html:144:      if (typeof Prism !== 'undefined') {
themes/rubylearning/layouts/page.html:145:        Prism.highlightAll();
themes/rubylearning/layouts/home.html:9:      <p class="hero-subtitle">Short, purposeful lessons paired with runnable examples so you can go from “Hello World” to production-ready Ruby.</p>
themes/rubylearning/layouts/home.html:87:          <p>Master expressions, flow, and Ruby idioms with curated guides and runnable examples.</p>
themes/rubylearning/layouts/home.html:102:          <h3>Project playbooks</h3>
themes/rubylearning/layouts/home.html:155:            <p>Start with the basics: values, methods, conditionals, and loops. Each lesson ends with a runnable snippet.</p>
docs/INTERNALS.md:32:1. Persist dependency edges between runs.
docs/INTERNALS.md:66:1. **Preprocess** – run `helpers/preprocess.rb` if present (future).
docs/INTERNALS.md:72:7. **Prune** – delete files in `public/` with no matching rep (already handled via `.htaccess`/build step; will be formalised).
docs/INTERNALS.md:73:8. **CompileReps** – execute action sequences, honour hard dependencies, reuse cached steps where possible.
docs/INTERNALS.md:83:2. **Recalculate** – run pending actions when cache miss occurs.
content/pages/about.md:8:Ruby Learning is the reference project for Typophic—the static-site generator we are building in the open. Every feature we ship to Typophic is tested here first, so the site doubles as a playground for contributors and a resource for new Rubyists.
content/pages/about.md:12:- **Teach by doing.** Every tutorial includes runnable code and clear next steps.
content/pages/about.md:24:3. Run `typophic build --deploy` locally before opening the PR so we can review the generated output.
themes/rubylearning/js/tutorial-enhancements.js:4:  // Only run on tutorials page
themes/rubylearning/js/tutorial-enhancements.js:95:        section.style.display = matchesSearch ? 'block' : 'none';
themes/rubylearning/css/prism-monokai.css:2: * Monokai theme for Prism.js
themes/rubylearning/css/badges.css:5:  display: inline-block;
themes/rubylearning/css/badges.css:42:  display: flex;
themes/rubylearning/css/badges.css:49:  display: flex;
themes/rubylearning/css/badges.css:91:  display: grid;
themes/rubylearning/css/badges.css:111:  display: flex;
AGENTS.md:4:The `typophic` executable lives in `bin/`, while all reusable code ships under `lib/typophic/` (CLI, builder, command modules). Authoring happens in `content/` (Markdown lessons by topic) and `themes/<name>/` (ERB layouts, partials, and static assets). Optional overrides live in root-level `layouts/`, `includes/`, `assets/`, and `helpers/`. Shared YAML data belongs in `data/`, and generated output always lands in `public/`—treat it as disposable. Automation utilities stay in `tools/`, and environment-wide settings remain in `config.yml`.
AGENTS.md:7:Use `typophic build` for one-off builds; add `--deploy` before publishing to drop `.nojekyll` and the 404 page. Run `typophic serve --build --port 3000` during authoring for a live preview. For deploy rehearsals run `typophic deploy --local --watch`; to publish, call `typophic deploy --remote origin --branch gh-pages`. Scaffold new themes with `typophic theme new <name>`—every workflow now flows through the single `typophic` CLI.
AGENTS.md:10:Ruby code sticks to two-space indentation, snake_case identifiers, and descriptive class/module names (e.g., `Typophic::Builder`). Keep `bin/typophic` executable (`chmod +x`). New CLI or helper files must start with `#!/usr/bin/env ruby` and `# frozen_string_literal: true`. In ERB templates, prefer semantic HTML and BEM-ish class names. Add concise comments only when intent is unclear. Content Markdown should include frontmatter with `title`, `layout`, and optional `permalink`. Theme/site helper methods should live under `helpers/` and define modules within `Typophic::Helpers` so templates can include them automatically.
AGENTS.md:13:There is no automated suite yet; manually run `typophic build --deploy` and `typophic serve --port 3000` to verify pages, navigation, theme overrides, and assets. Spot-check generated URLs and asset paths—link fixing happens during the build now. When touching Ruby helpers, add quick smoke scripts under `tools/` or invoke via `typophic` in dry runs to ensure missing frontmatter is handled gracefully.
content/pages/rails.md:10:Ruby on Rails shines when you build something tangible. This hub highlights how to set up your environment, follow a project-focused curriculum, and reinforce good habits.
content/pages/rails.md:26:- Use background workers for long-running tasks early; they encourage clean separation of concerns.
themes/rubylearning/css/highlight-monokai.css:1:/* Monokai theme for highlight.js */
themes/rubylearning/css/highlight-monokai.css:2:.hljs {
themes/rubylearning/css/highlight-monokai.css:3:  display: block;
themes/rubylearning/css/highlight-monokai.css:10:.hljs-tag,
themes/rubylearning/css/highlight-monokai.css:11:.hljs-subst {
themes/rubylearning/css/highlight-monokai.css:15:.hljs-strong,
themes/rubylearning/css/highlight-monokai.css:16:.hljs-emphasis {
themes/rubylearning/css/highlight-monokai.css:20:.hljs-bullet,
themes/rubylearning/css/highlight-monokai.css:21:.hljs-quote,
themes/rubylearning/css/highlight-monokai.css:22:.hljs-number,
themes/rubylearning/css/highlight-monokai.css:23:.hljs-regexp,
themes/rubylearning/css/highlight-monokai.css:24:.hljs-literal,
themes/rubylearning/css/highlight-monokai.css:25:.hljs-link {
themes/rubylearning/css/highlight-monokai.css:29:.hljs-code,
themes/rubylearning/css/highlight-monokai.css:30:.hljs-title,
themes/rubylearning/css/highlight-monokai.css:31:.hljs-section,
themes/rubylearning/css/highlight-monokai.css:32:.hljs-selector-class {
themes/rubylearning/css/highlight-monokai.css:36:.hljs-strong {
themes/rubylearning/css/highlight-monokai.css:40:.hljs-emphasis {
themes/rubylearning/css/highlight-monokai.css:44:.hljs-keyword,
themes/rubylearning/css/highlight-monokai.css:45:.hljs-selector-tag,
themes/rubylearning/css/highlight-monokai.css:46:.hljs-name,
themes/rubylearning/css/highlight-monokai.css:47:.hljs-attr {
themes/rubylearning/css/highlight-monokai.css:51:.hljs-symbol,
themes/rubylearning/css/highlight-monokai.css:52:.hljs-attribute {
themes/rubylearning/css/highlight-monokai.css:56:.hljs-params,
themes/rubylearning/css/highlight-monokai.css:57:.hljs-title.class_,
themes/rubylearning/css/highlight-monokai.css:58:.hljs-class .hljs-title {
themes/rubylearning/css/highlight-monokai.css:62:.hljs-string,
themes/rubylearning/css/highlight-monokai.css:63:.hljs-type,
themes/rubylearning/css/highlight-monokai.css:64:.hljs-built_in,
themes/rubylearning/css/highlight-monokai.css:65:.hljs-selector-id,
themes/rubylearning/css/highlight-monokai.css:66:.hljs-selector-attr,
themes/rubylearning/css/highlight-monokai.css:67:.hljs-selector-pseudo,
themes/rubylearning/css/highlight-monokai.css:68:.hljs-addition,
themes/rubylearning/css/highlight-monokai.css:69:.hljs-variable,
themes/rubylearning/css/highlight-monokai.css:70:.hljs-template-variable {
themes/rubylearning/css/highlight-monokai.css:74:.hljs-comment,
themes/rubylearning/css/highlight-monokai.css:75:.hljs-deletion,
themes/rubylearning/css/highlight-monokai.css:76:.hljs-meta {
themes/rubylearning/css/highlight-monokai.css:80:/* Additional styles for code display */
themes/rubylearning/css/highlight-monokai.css:94:/* Copy button styles */
themes/rubylearning/css/highlight-monokai.css:95:.hljs-copy-wrapper {
themes/rubylearning/css/highlight-monokai.css:99:.hljs-copy-button {
themes/rubylearning/css/highlight-monokai.css:113:.hljs-copy-button:hover {
themes/rubylearning/css/highlight-monokai.css:118:.hljs-copy-alert {
themes/rubylearning/css/highlight-monokai.css:133:.hljs-copy-button:focus + .hljs-copy-alert {
themes/rubylearning/css/style.css:9:  display: inline-flex;
themes/rubylearning/css/style.css:33:  display: flex;
themes/rubylearning/css/style.css:41:  display: flex;
themes/rubylearning/css/style.css:58:  display: flex;
themes/rubylearning/css/style.css:100:  display: flex;
themes/rubylearning/css/style.css:107:  display: flex;
themes/rubylearning/css/style.css:160:  display: grid;
themes/rubylearning/css/style.css:193:  display: grid;
themes/rubylearning/css/style.css:219:  display: grid;
themes/rubylearning/css/style.css:245:  display: grid;
themes/rubylearning/css/style.css:274:  display: grid;
themes/rubylearning/css/style.css:301:  display: flex;
themes/rubylearning/css/style.css:317:  display: flex;
themes/rubylearning/css/style.css:325:  display: inline-flex;
themes/rubylearning/css/style.css:467:/* Simple inline code (not highlighted by Prism) */
themes/rubylearning/css/style.css:487:  display: flex;
themes/rubylearning/css/style.css:496:  display: flex;
themes/rubylearning/css/style.css:510:  display: flex;
themes/rubylearning/css/style.css:548:  display: none;
themes/rubylearning/css/style.css:558:  display: block;
themes/rubylearning/css/style.css:603:  display: grid;
themes/rubylearning/css/style.css:611:  display: flex;
themes/rubylearning/css/style.css:629:  display: flex;
themes/rubylearning/css/style.css:635:  display: flex;
themes/rubylearning/css/style.css:651:  display: flex;
themes/rubylearning/css/style.css:690:  display: grid;
themes/rubylearning/css/style.css:709:  display: inline-flex;
themes/rubylearning/css/style.css:731:  display: grid;
themes/rubylearning/css/style.css:757:  display: flex;
themes/rubylearning/css/style.css:766:  display: flex;
themes/rubylearning/css/style.css:771:  display: inline-block;
themes/rubylearning/css/style.css:787:  display: grid;
themes/rubylearning/css/style.css:844:  display: inline-block;
themes/rubylearning/css/style.css:901:  display: flex;
themes/rubylearning/css/style.css:967:    display: block;
simple-deploy.sh:28:# Make scripts executable
simple-deploy.sh:29:chmod +x bin/* 2>/dev/null || echo "Warning: Could not make bin scripts executable"
simple-deploy.sh:54:# Copy the public directory contents
themes/rubylearning/js/github-pages-fix.js:4:  // Only run this script when deployed on GitHub Pages
themes/rubylearning/css/modern-ruby-style.css:92:  display: flex;
themes/rubylearning/css/modern-ruby-style.css:108:  display: flex;
themes/rubylearning/css/modern-ruby-style.css:187:.copy-button {
themes/rubylearning/css/modern-ruby-style.css:202:.copy-button:hover {
themes/rubylearning/css/modern-ruby-style.css:228:  display: grid;
themes/rubylearning/css/modern-ruby-style.css:240:  display: block;
themes/rubylearning/css/modern-ruby-style.css:263:  display: flex;
themes/rubylearning/css/modern-ruby-style.css:271:  display: inline-block;
themes/rubylearning/css/modern-ruby-style.css:293:  display: grid;
themes/rubylearning/css/tutorials.css:4:  display: flex;
themes/rubylearning/css/tutorials.css:11:  display: inline-block;
themes/rubylearning/css/tutorials.css:42:  display: inline-block;
themes/rubylearning/css/tutorials.css:48:  display: inline-block;
themes/rubylearning/css/tutorials.css:83:  display: flex;
content/pages/ruby.md:19:- Work through each interactive example locally or in an online REPL—pausing to tweak and rerun code until the concept sticks.
content/pages/ruby.md:30:## Build a personal Ruby playbook
content/pages/resources.md:74:## Video playlists & screencasts
themes/rubylearning/css/enhanced-code.css:1:/* Enhanced Syntax Highlighting for Code Blocks */
themes/rubylearning/css/enhanced-code.css:60:/* Line highlight effect */
themes/rubylearning/css/enhanced-code.css:61:.line-highlight {
themes/rubylearning/css/enhanced-code.css:127:  display: flex;
themes/rubylearning/css/enhanced-code.css:158:.copy-button {
themes/rubylearning/css/enhanced-code.css:168:  display: flex;
themes/rubylearning/css/enhanced-code.css:175:.copy-button:hover {
themes/rubylearning/css/enhanced-code.css:187:/* Syntax highlighting override for Ruby's common elements */
themes/rubylearning/css/enhanced-code.css:246:.run-button {
themes/rubylearning/css/enhanced-code.css:257:.run-button:hover {
themes/rubylearning/js/typophic-fixes.js:2: * Typophic site fixes for syntax highlighting and template variable rendering
themes/rubylearning/js/typophic-fixes.js:8:  // Apply syntax highlighting to code blocks
themes/rubylearning/js/typophic-fixes.js:9:  applySyntaxHighlighting();
themes/rubylearning/js/typophic-fixes.js:11:  // Add copy buttons to code blocks
themes/rubylearning/js/typophic-fixes.js:12:  addCopyButtons();
themes/rubylearning/js/typophic-fixes.js:35: * Applies syntax highlighting to code blocks
themes/rubylearning/js/typophic-fixes.js:37:function applySyntaxHighlighting() {
themes/rubylearning/js/typophic-fixes.js:38:  // Check if highlight.js is already loaded
themes/rubylearning/js/typophic-fixes.js:39:  if (typeof hljs === 'undefined') {
themes/rubylearning/js/typophic-fixes.js:40:    console.warn('Highlight.js is not loaded. Syntax highlighting will not be applied.');
themes/rubylearning/js/typophic-fixes.js:81:    // Apply highlighting
themes/rubylearning/js/typophic-fixes.js:82:    hljs.highlightElement(block);
themes/rubylearning/js/typophic-fixes.js:87: * Adds copy buttons to code blocks
themes/rubylearning/js/typophic-fixes.js:89:function addCopyButtons() {
themes/rubylearning/js/typophic-fixes.js:91:    // Create the copy button wrapper and button
themes/rubylearning/js/typophic-fixes.js:95:    const copyButton = document.createElement('button');
themes/rubylearning/js/typophic-fixes.js:96:    copyButton.className = 'copy-button';
themes/rubylearning/js/typophic-fixes.js:97:    copyButton.textContent = 'Copy';
themes/rubylearning/js/typophic-fixes.js:103:    wrapper.appendChild(copyButton);
themes/rubylearning/js/typophic-fixes.js:105:    // Add click event to copy code
themes/rubylearning/js/typophic-fixes.js:106:    copyButton.addEventListener('click', () => {
themes/rubylearning/js/typophic-fixes.js:109:        copyButton.textContent = 'Copied!';
themes/rubylearning/js/typophic-fixes.js:111:          copyButton.textContent = 'Copy';
themes/rubylearning/js/typophic-fixes.js:114:        console.error('Failed to copy code:', err);
themes/rubylearning/js/typophic-fixes.js:115:        copyButton.textContent = 'Error!';
themes/rubylearning/js/typophic-fixes.js:117:          copyButton.textContent = 'Copy';
content/posts/2023-01-01-welcome.md:21:- A concept overview and runnable Ruby snippet.
content/posts/2023-01-02-ruby-examples.md:45:You can also run this code:
content/posts/2023-01-02-ruby-examples.md:47:```ruby-exec
themes/rubylearning/js/code-enhancements.js:2:  if (typeof Prism !== 'undefined') Prism.highlightAll();
themes/rubylearning/js/code-enhancements.js:3:  addCopyButtonsToCodeBlocks();
themes/rubylearning/js/code-enhancements.js:4:  await addRubyExecSupport();
themes/rubylearning/js/code-enhancements.js:24:async function addRubyExecSupport() {
themes/rubylearning/js/code-enhancements.js:25:  // Only add Ruby execution support on pages with Ruby code
themes/rubylearning/js/code-enhancements.js:62:      // Add run button to the header
themes/rubylearning/js/code-enhancements.js:64:      if (header && !header.querySelector('.run-button')) {
themes/rubylearning/js/code-enhancements.js:65:        const runButton = document.createElement('button');
themes/rubylearning/js/code-enhancements.js:66:        runButton.className = 'run-button';
themes/rubylearning/js/code-enhancements.js:67:        runButton.textContent = '▶ Run Ruby';
themes/rubylearning/js/code-enhancements.js:68:        header.appendChild(runButton);
themes/rubylearning/js/code-enhancements.js:73:        // Add event listener for the run button
themes/rubylearning/js/code-enhancements.js:74:        runButton.addEventListener('click', async () => {
themes/rubylearning/js/code-enhancements.js:76:          outputContent.textContent = 'Executing Ruby code...\n';
themes/rubylearning/js/code-enhancements.js:79:            // Execute Ruby code with output redirection
themes/rubylearning/js/code-enhancements.js:96:            // Display the captured output
themes/rubylearning/js/code-enhancements.js:97:            outputContent.textContent = ">> " + result.toString() || 'Execution completed successfully.';
themes/rubylearning/js/code-enhancements.js:105:    console.warn('Ruby execution support failed to initialize:', error);
themes/rubylearning/js/code-enhancements.js:109:function addCopyButtonsToCodeBlocks() {
themes/rubylearning/js/code-enhancements.js:142:    // Add copy button if missing
themes/rubylearning/js/code-enhancements.js:143:    if (!codeWindow.querySelector('.copy-button')) {
themes/rubylearning/js/code-enhancements.js:144:      const copyBtn = Object.assign(document.createElement('button'), {
themes/rubylearning/js/code-enhancements.js:145:        className: 'copy-button',
themes/rubylearning/js/code-enhancements.js:146:        innerHTML: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"/><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"/></svg><span>Copy</span>`
themes/rubylearning/js/code-enhancements.js:150:        copyBtn.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">${iconPath}</svg><span>${text}</span>`;
themes/rubylearning/js/code-enhancements.js:152:          setTimeout(() => copyBtn.innerHTML =
themes/rubylearning/js/code-enhancements.js:153:            `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"/><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"/></svg><span>Copy</span>`, timeout);
themes/rubylearning/js/code-enhancements.js:156:      copyBtn.addEventListener('click', async () => {
themes/rubylearning/js/code-enhancements.js:165:      codeWindow.querySelector('.code-header').appendChild(copyBtn);
themes/rubylearning/js/prism.js:1:/* PrismJS 1.30.0
themes/rubylearning/js/prism.js:2:https://prismjs.com/download#themes=prism&languages=markup+css+clike+javascript+erb+markup-templating+ruby+xml-doc+yaml */
themes/rubylearning/js/prism.js:3:var _self="undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(e){var n=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,t=0,r={},a={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function e(n){return n instanceof i?new i(n.type,e(n.content),n.alias):Array.isArray(n)?n.map(e):n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++t}),e.__id},clone:function e(n,t){var r,i;switch(t=t||{},a.util.type(n)){case"Object":if(i=a.util.objId(n),t[i])return t[i];for(var l in r={},t[i]=r,n)n.hasOwnProperty(l)&&(r[l]=e(n[l],t));return r;case"Array":return i=a.util.objId(n),t[i]?t[i]:(r=[],t[i]=r,n.forEach((function(n,a){r[a]=e(n,t)})),r);default:return n}},getLanguage:function(e){for(;e;){var t=n.exec(e.className);if(t)return t[1].toLowerCase();e=e.parentElement}return"none"},setLanguage:function(e,t){e.className=e.className.replace(RegExp(n,"gi"),""),e.classList.add("language-"+t)},currentScript:function(){if("undefined"==typeof document)return null;if(document.currentScript&&"SCRIPT"===document.currentScript.tagName)return document.currentScript;try{throw new Error}catch(r){var e=(/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(r.stack)||[])[1];if(e){var n=document.getElementsByTagName("script");for(var t in n)if(n[t].src==e)return n[t]}return null}},isActive:function(e,n,t){for(var r="no-"+n;e;){var a=e.classList;if(a.contains(n))return!0;if(a.contains(r))return!1;e=e.parentElement}return!!t}},languages:{plain:r,plaintext:r,text:r,txt:r,extend:function(e,n){var t=a.util.clone(a.languages[e]);for(var r in n)t[r]=n[r];return t},insertBefore:function(e,n,t,r){var i=(r=r||a.languages)[e],l={};for(var o in i)if(i.hasOwnProperty(o)){if(o==n)for(var s in t)t.hasOwnProperty(s)&&(l[s]=t[s]);t.hasOwnProperty(o)||(l[o]=i[o])}var u=r[e];return r[e]=l,a.languages.DFS(a.languages,(function(n,t){t===u&&n!=e&&(this[n]=l)})),l},DFS:function e(n,t,r,i){i=i||{};var l=a.util.objId;for(var o in n)if(n.hasOwnProperty(o)){t.call(n,o,n[o],r||o);var s=n[o],u=a.util.type(s);"Object"!==u||i[l(s)]?"Array"!==u||i[l(s)]||(i[l(s)]=!0,e(s,t,o,i)):(i[l(s)]=!0,e(s,t,null,i))}}},plugins:{},highlightAll:function(e,n){a.highlightAllUnder(document,e,n)},highlightAllUnder:function(e,n,t){var r={callback:t,container:e,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};a.hooks.run("before-highlightall",r),r.elements=Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)),a.hooks.run("before-all-elements-highlight",r);for(var i,l=0;i=r.elements[l++];)a.highlightElement(i,!0===n,r.callback)},highlightElement:function(n,t,r){var i=a.util.getLanguage(n),l=a.languages[i];a.util.setLanguage(n,i);var o=n.parentElement;o&&"pre"===o.nodeName.toLowerCase()&&a.util.setLanguage(o,i);var s={element:n,language:i,grammar:l,code:n.textContent};function u(e){s.highlightedCode=e,a.hooks.run("before-insert",s),s.element.innerHTML=s.highlightedCode,a.hooks.run("after-highlight",s),a.hooks.run("complete",s),r&&r.call(s.element)}if(a.hooks.run("before-sanity-check",s),(o=s.element.parentElement)&&"pre"===o.nodeName.toLowerCase()&&!o.hasAttribute("tabindex")&&o.setAttribute("tabindex","0"),!s.code)return a.hooks.run("complete",s),void(r&&r.call(s.element));if(a.hooks.run("before-highlight",s),s.grammar)if(t&&e.Worker){var c=new Worker(a.filename);c.onmessage=function(e){u(e.data)},c.postMessage(JSON.stringify({language:s.language,code:s.code,immediateClose:!0}))}else u(a.highlight(s.code,s.grammar,s.language));else u(a.util.encode(s.code))},highlight:function(e,n,t){var r={code:e,grammar:n,language:t};if(a.hooks.run("before-tokenize",r),!r.grammar)throw new Error('The language "'+r.language+'" has no grammar.');return r.tokens=a.tokenize(r.code,r.grammar),a.hooks.run("after-tokenize",r),i.stringify(a.util.encode(r.tokens),r.language)},tokenize:function(e,n){var t=n.rest;if(t){for(var r in t)n[r]=t[r];delete n.rest}var a=new s;return u(a,a.head,e),o(e,a,n,a.head,0),function(e){for(var n=[],t=e.head.next;t!==e.tail;)n.push(t.value),t=t.next;return n}(a)},hooks:{all:{},add:function(e,n){var t=a.hooks.all;t[e]=t[e]||[],t[e].push(n)},run:function(e,n){var t=a.hooks.all[e];if(t&&t.length)for(var r,i=0;r=t[i++];)r(n)}},Token:i};function i(e,n,t,r){this.type=e,this.content=n,this.alias=t,this.length=0|(r||"").length}function l(e,n,t,r){e.lastIndex=n;var a=e.exec(t);if(a&&r&&a[1]){var i=a[1].length;a.index+=i,a[0]=a[0].slice(i)}return a}function o(e,n,t,r,s,g){for(var f in t)if(t.hasOwnProperty(f)&&t[f]){var h=t[f];h=Array.isArray(h)?h:[h];for(var d=0;d<h.length;++d){if(g&&g.cause==f+","+d)return;var v=h[d],p=v.inside,m=!!v.lookbehind,y=!!v.greedy,k=v.alias;if(y&&!v.pattern.global){var x=v.pattern.toString().match(/[imsuy]*$/)[0];v.pattern=RegExp(v.pattern.source,x+"g")}for(var b=v.pattern||v,w=r.next,A=s;w!==n.tail&&!(g&&A>=g.reach);A+=w.value.length,w=w.next){var P=w.value;if(n.length>e.length)return;if(!(P instanceof i)){var E,S=1;if(y){if(!(E=l(b,A,e,m))||E.index>=e.length)break;var L=E.index,O=E.index+E[0].length,C=A;for(C+=w.value.length;L>=C;)C+=(w=w.next).value.length;if(A=C-=w.value.length,w.value instanceof i)continue;for(var j=w;j!==n.tail&&(C<O||"string"==typeof j.value);j=j.next)S++,C+=j.value.length;S--,P=e.slice(A,C),E.index-=A}else if(!(E=l(b,0,P,m)))continue;L=E.index;var N=E[0],_=P.slice(0,L),M=P.slice(L+N.length),W=A+P.length;g&&W>g.reach&&(g.reach=W);var I=w.prev;if(_&&(I=u(n,I,_),A+=_.length),c(n,I,S),w=u(n,I,new i(f,p?a.tokenize(N,p):N,k,N)),M&&u(n,w,M),S>1){var T={cause:f+","+d,reach:W};o(e,n,t,w.prev,A,T),g&&T.reach>g.reach&&(g.reach=T.reach)}}}}}}function s(){var e={value:null,prev:null,next:null},n={value:null,prev:e,next:null};e.next=n,this.head=e,this.tail=n,this.length=0}function u(e,n,t){var r=n.next,a={value:t,prev:n,next:r};return n.next=a,r.prev=a,e.length++,a}function c(e,n,t){for(var r=n.next,a=0;a<t&&r!==e.tail;a++)r=r.next;n.next=r,r.prev=n,e.length-=a}if(e.Prism=a,i.stringify=function e(n,t){if("string"==typeof n)return n;if(Array.isArray(n)){var r="";return n.forEach((function(n){r+=e(n,t)})),r}var i={type:n.type,content:e(n.content,t),tag:"span",classes:["token",n.type],attributes:{},language:t},l=n.alias;l&&(Array.isArray(l)?Array.prototype.push.apply(i.classes,l):i.classes.push(l)),a.hooks.run("wrap",i);var o="";for(var s in i.attributes)o+=" "+s+'="'+(i.attributes[s]||"").replace(/"/g,"&quot;")+'"';return"<"+i.tag+' class="'+i.classes.join(" ")+'"'+o+">"+i.content+"</"+i.tag+">"},!e.document)return e.addEventListener?(a.disableWorkerMessageHandler||e.addEventListener("message",(function(n){var t=JSON.parse(n.data),r=t.language,i=t.code,l=t.immediateClose;e.postMessage(a.highlight(i,a.languages[r],r)),l&&e.close()}),!1),a):a;var g=a.util.currentScript();function f(){a.manual||a.highlightAll()}if(g&&(a.filename=g.src,g.hasAttribute("data-manual")&&(a.manual=!0)),!a.manual){var h=document.readyState;"loading"===h||"interactive"===h&&g&&g.defer?document.addEventListener("DOMContentLoaded",f):window.requestAnimationFrame?window.requestAnimationFrame(f):window.setTimeout(f,16)}return a}(_self);"undefined"!=typeof module&&module.exports&&(module.exports=Prism),"undefined"!=typeof global&&(global.Prism=Prism);
themes/rubylearning/js/prism.js:4:Prism.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},Prism.languages.markup.tag.inside["attr-value"].inside.entity=Prism.languages.markup.entity,Prism.languages.markup.doctype.inside["internal-subset"].inside=Prism.languages.markup,Prism.hooks.add("wrap",(function(a){"entity"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,"&"))})),Object.defineProperty(Prism.languages.markup.tag,"addInlined",{value:function(a,e){var s={};s["language-"+e]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:Prism.languages[e]},s.cdata=/^<!\[CDATA\[|\]\]>$/i;var t={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:s}};t["language-"+e]={pattern:/[\s\S]+/,inside:Prism.languages[e]};var n={};n[a]={pattern:RegExp("(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[^])*?(?=</__>)".replace(/__/g,(function(){return a})),"i"),lookbehind:!0,greedy:!0,inside:t},Prism.languages.insertBefore("markup","cdata",n)}}),Object.defineProperty(Prism.languages.markup.tag,"addAttribute",{value:function(a,e){Prism.languages.markup.tag.inside["special-attr"].push({pattern:RegExp("(^|[\"'\\s])(?:"+a+")\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))","i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[e,"language-"+e],inside:Prism.languages[e]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup,Prism.languages.xml=Prism.languages.extend("markup",{}),Prism.languages.ssml=Prism.languages.xml,Prism.languages.atom=Prism.languages.xml,Prism.languages.rss=Prism.languages.xml;
themes/rubylearning/js/prism.js:5:!function(s){var e=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;s.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:RegExp("@[\\w-](?:[^;{\\s\"']|\\s+(?!\\s)|"+e.source+")*?(?:;|(?=\\s*\\{))"),inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+e.source+"|(?:[^\\\\\r\n()\"']|\\\\[^])*)\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+e.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+e.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:e,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},s.languages.css.atrule.inside.rest=s.languages.css;var t=s.languages.markup;t&&(t.tag.addInlined("style","css"),t.tag.addAttribute("style","css"))}(Prism);
themes/rubylearning/js/prism.js:6:Prism.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/};
themes/rubylearning/js/prism.js:7:Prism.languages.javascript=Prism.languages.extend("clike",{"class-name":[Prism.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp("(^|[^\\w$])(?:NaN|Infinity|0[bB][01]+(?:_[01]+)*n?|0[oO][0-7]+(?:_[0-7]+)*n?|0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?|\\d+(?:_\\d+)*n|(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?)(?![\\w$])"),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),Prism.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,Prism.languages.insertBefore("javascript","keyword",{regex:{pattern:RegExp("((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/(?:(?:\\[(?:[^\\]\\\\\r\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\r\n])+/[dgimyus]{0,7}|(?:\\[(?:[^[\\]\\\\\r\n]|\\\\.|\\[(?:[^[\\]\\\\\r\n]|\\\\.|\\[(?:[^[\\]\\\\\r\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\r\n])+/[dgimyus]{0,7}v[dgimyus]{0,7})(?=(?:\\s|/\\*(?:[^*]|\\*(?!/))*\\*/)*(?:$|[\r\n,.;:})\\]]|//))"),lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:Prism.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:Prism.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),Prism.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:Prism.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),Prism.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),Prism.languages.markup&&(Prism.languages.markup.tag.addInlined("script","javascript"),Prism.languages.markup.tag.addAttribute("on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)","javascript")),Prism.languages.js=Prism.languages.javascript;
themes/rubylearning/js/prism.js:8:!function(e){e.languages.ruby=e.languages.extend("clike",{comment:{pattern:/#.*|^=begin\s[\s\S]*?^=end/m,greedy:!0},"class-name":{pattern:/(\b(?:class|module)\s+|\bcatch\s+\()[\w.\\]+|\b[A-Z_]\w*(?=\s*\.\s*new\b)/,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\b/,operator:/\.{2,3}|&\.|===|<?=>|[!=]?~|(?:&&|\|\||<<|>>|\*\*|[+\-*/%<>!^&|=])=?|[?:]/,punctuation:/[(){}[\].,;]/}),e.languages.insertBefore("ruby","operator",{"double-colon":{pattern:/::/,alias:"punctuation"}});var n={pattern:/((?:^|[^\\])(?:\\{2})*)#\{(?:[^{}]|\{[^{}]*\})*\}/,lookbehind:!0,inside:{content:{pattern:/^(#\{)[\s\S]+(?=\}$)/,lookbehind:!0,inside:e.languages.ruby},delimiter:{pattern:/^#\{|\}$/,alias:"punctuation"}}};delete e.languages.ruby.function;var t="(?:"+["([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[^])*\\1","\\((?:[^()\\\\]|\\\\[^]|\\((?:[^()\\\\]|\\\\[^])*\\))*\\)","\\{(?:[^{}\\\\]|\\\\[^]|\\{(?:[^{}\\\\]|\\\\[^])*\\})*\\}","\\[(?:[^\\[\\]\\\\]|\\\\[^]|\\[(?:[^\\[\\]\\\\]|\\\\[^])*\\])*\\]","<(?:[^<>\\\\]|\\\\[^]|<(?:[^<>\\\\]|\\\\[^])*>)*>"].join("|")+")",i='(?:"(?:\\\\.|[^"\\\\\r\n])*"|(?:\\b[a-zA-Z_]\\w*|[^\\s\0-\\x7F]+)[?!]?|\\$.)';e.languages.insertBefore("ruby","keyword",{"regex-literal":[{pattern:RegExp("%r"+t+"[egimnosux]{0,6}"),greedy:!0,inside:{interpolation:n,regex:/[\s\S]+/}},{pattern:/(^|[^/])\/(?!\/)(?:\[[^\r\n\]]+\]|\\.|[^[/\\\r\n])+\/[egimnosux]{0,6}(?=\s*(?:$|[\r\n,.;})#]))/,lookbehind:!0,greedy:!0,inside:{interpolation:n,regex:/[\s\S]+/}}],variable:/[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,symbol:[{pattern:RegExp("(^|[^:]):"+i),lookbehind:!0,greedy:!0},{pattern:RegExp("([\r\n{(,][ \t]*)"+i+"(?=:(?!:))"),lookbehind:!0,greedy:!0}],"method-definition":{pattern:/(\bdef\s+)\w+(?:\s*\.\s*\w+)?/,lookbehind:!0,inside:{function:/\b\w+$/,keyword:/^self\b/,"class-name":/^\w+/,punctuation:/\./}}}),e.languages.insertBefore("ruby","string",{"string-literal":[{pattern:RegExp("%[qQiIwWs]?"+t),greedy:!0,inside:{interpolation:n,string:/[\s\S]+/}},{pattern:/("|')(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|(?!\1)[^\\#\r\n])*\1/,greedy:!0,inside:{interpolation:n,string:/[\s\S]+/}},{pattern:/<<[-~]?([a-z_]\w*)[\r\n](?:.*[\r\n])*?[\t ]*\1/i,alias:"heredoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?[a-z_]\w*|\b[a-z_]\w*$/i,inside:{symbol:/\b\w+/,punctuation:/^<<[-~]?/}},interpolation:n,string:/[\s\S]+/}},{pattern:/<<[-~]?'([a-z_]\w*)'[\r\n](?:.*[\r\n])*?[\t ]*\1/i,alias:"heredoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?'[a-z_]\w*'|\b[a-z_]\w*$/i,inside:{symbol:/\b\w+/,punctuation:/^<<[-~]?'|'$/}},string:/[\s\S]+/}}],"command-literal":[{pattern:RegExp("%x"+t),greedy:!0,inside:{interpolation:n,command:{pattern:/[\s\S]+/,alias:"string"}}},{pattern:/`(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|[^\\`#\r\n])*`/,greedy:!0,inside:{interpolation:n,command:{pattern:/[\s\S]+/,alias:"string"}}}]}),delete e.languages.ruby.string,e.languages.insertBefore("ruby","number",{builtin:/\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\b/,constant:/\b[A-Z][A-Z0-9_]*(?:[?!]|\b)/}),e.languages.rb=e.languages.ruby}(Prism);
themes/rubylearning/js/prism.js:9:!function(e){function n(e,n){return"___"+e.toUpperCase()+n+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(t,a,r,o){if(t.language===a){var c=t.tokenStack=[];t.code=t.code.replace(r,(function(e){if("function"==typeof o&&!o(e))return e;for(var r,i=c.length;-1!==t.code.indexOf(r=n(a,i));)++i;return c[i]=e,r})),t.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(t,a){if(t.language===a&&t.tokenStack){t.grammar=e.languages[a];var r=0,o=Object.keys(t.tokenStack);!function c(i){for(var u=0;u<i.length&&!(r>=o.length);u++){var g=i[u];if("string"==typeof g||g.content&&"string"==typeof g.content){var l=o[r],s=t.tokenStack[l],f="string"==typeof g?g:g.content,p=n(a,l),k=f.indexOf(p);if(k>-1){++r;var m=f.substring(0,k),d=new e.Token(a,e.tokenize(s,t.grammar),"language-"+a,s),h=f.substring(k+p.length),v=[];m&&v.push.apply(v,c([m])),v.push(d),h&&v.push.apply(v,c([h])),"string"==typeof g?i.splice.apply(i,[u,1].concat(v)):g.content=v}}else g.content&&c(g.content)}return i}(t.tokens)}}}})}(Prism);
themes/rubylearning/js/prism.js:10:!function(e){e.languages.erb={delimiter:{pattern:/^(\s*)<%=?|%>(?=\s*$)/,lookbehind:!0,alias:"punctuation"},ruby:{pattern:/\s*\S[\s\S]*/,alias:"language-ruby",inside:e.languages.ruby}},e.hooks.add("before-tokenize",(function(n){e.languages["markup-templating"].buildPlaceholders(n,"erb",/<%=?(?:[^\r\n]|[\r\n](?!=begin)|[\r\n]=begin\s(?:[^\r\n]|[\r\n](?!=end))*[\r\n]=end)+?%>/g)})),e.hooks.add("after-tokenize",(function(n){e.languages["markup-templating"].tokenizePlaceholders(n,"erb")}))}(Prism);
themes/rubylearning/js/prism.js:11:!function(a){function e(e,n){a.languages[e]&&a.languages.insertBefore(e,"comment",{"doc-comment":n})}var n=a.languages.markup.tag,t={pattern:/\/\/\/.*/,greedy:!0,alias:"comment",inside:{tag:n}},g={pattern:/'''.*/,greedy:!0,alias:"comment",inside:{tag:n}};e("csharp",t),e("fsharp",t),e("vbnet",g)}(Prism);
themes/rubylearning/js/prism.js:12:!function(e){var n=/[*&][^\s[\]{},]+/,r=/!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/,t="(?:"+r.source+"(?:[ \t]+"+n.source+")?|"+n.source+"(?:[ \t]+"+r.source+")?)",a="(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*".replace(/<PLAIN>/g,(function(){return"[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]"})),d="\"(?:[^\"\\\\\r\n]|\\\\.)*\"|'(?:[^'\\\\\r\n]|\\\\.)*'";function o(e,n){n=(n||"").replace(/m/g,"")+"m";var r="([:\\-,[{]\\s*(?:\\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\\]|\\}|(?:[\r\n]\\s*)?#))".replace(/<<prop>>/g,(function(){return t})).replace(/<<value>>/g,(function(){return e}));return RegExp(r,n)}e.languages.yaml={scalar:{pattern:RegExp("([\\-:]\\s*(?:\\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\\S[^\r\n]*(?:\\2[^\r\n]+)*)".replace(/<<prop>>/g,(function(){return t}))),lookbehind:!0,alias:"string"},comment:/#.*/,key:{pattern:RegExp("((?:^|[:\\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\\s*:\\s)".replace(/<<prop>>/g,(function(){return t})).replace(/<<key>>/g,(function(){return"(?:"+a+"|"+d+")"}))),lookbehind:!0,greedy:!0,alias:"atrule"},directive:{pattern:/(^[ \t]*)%.+/m,lookbehind:!0,alias:"important"},datetime:{pattern:o("\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?"),lookbehind:!0,alias:"number"},boolean:{pattern:o("false|true","i"),lookbehind:!0,alias:"important"},null:{pattern:o("null|~","i"),lookbehind:!0,alias:"important"},string:{pattern:o(d),lookbehind:!0,greedy:!0},number:{pattern:o("[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)","i"),lookbehind:!0},tag:r,important:n,punctuation:/---|[:[\]{}\-,|>?]|\.\.\./},e.languages.yml=e.languages.yaml}(Prism);
content/pages/home/index.md:5:description: Learn Ruby step-by-step with runnable examples, curated lessons, and community-driven resources.
lib/typophic/commands/build.rb:10:      def self.run(argv)
lib/typophic/commands/build.rb:79:              body { font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif; display: grid; place-items: center; min-height: 100vh; background: #0f172a; color: #e2e8f0; margin: 0; }
lib/typophic/commands/serve.rb:13:      def self.run(argv)
lib/typophic/commands/serve.rb:26:          warn "Error: The 'public' directory does not exist. Please run `typophic build` first."
lib/typophic/commands/serve.rb:67:        puts "Server running at http://#{options[:host]}:#{options[:port]}"
lib/typophic/commands/blog.rb:15:      def self.run(argv)
lib/typophic/theme_scaffolder.rb:129:          <p>&copy; <%= Time.now.year %> #{author}. Built with Typophic.</p>
lib/typophic/commands/deploy.rb:15:      def run(argv)
lib/typophic/commands/deploy.rb:32:          opts.on("--local", "Run a local preview server instead of publishing") do
lib/typophic/commands/deploy.rb:89:        Typophic::Commands::Build.run([])
lib/typophic/commands/deploy.rb:94:          Typophic::Commands::Serve.run(["--port", options[:port].to_s])
lib/typophic/commands/deploy.rb:103:        Typophic::Commands::Build.run(build_args)
lib/typophic/commands/deploy.rb:144:            Typophic::Commands::Build.run(["--no-clean", "--quiet"])
content/posts/2025-10-30-ruby-kata-mindset.md:17:Pick a problem you can solve in five minutes—reversing strings, scanning arrays, or parsing dates. The goal is to get your fingers moving and your `irb` session ready. Once the snippet passes, copy it into a notes file so you can revisit technique changes over time.
content/posts/2025-10-30-ruby-kata-mindset.md:40:Turn the week’s highlight into a gist, a blog post, or a snippet you share with your team. Teaching reinforces your own understanding and gives others a jumping-off point.
content/pages/tutorials.md:5:summary: Pick a chapter to study, then follow the on-page prompts. Each tutorial is a self-contained lesson with runnable snippets, practice checklists, and next-step navigation.
themes/rubylearning/js/prism-markdown.js:1:(function (Prism) {
themes/rubylearning/js/prism-markdown.js:21:	Prism.languages.markdown = Prism.languages.extend('markup', {});
themes/rubylearning/js/prism-markdown.js:22:	Prism.languages.insertBefore('markdown', 'prolog', {
themes/rubylearning/js/prism-markdown.js:31:					inside: Prism.languages.yaml
themes/rubylearning/js/prism-markdown.js:238:				Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];
themes/rubylearning/js/prism-markdown.js:243:	Prism.hooks.add('after-tokenize', function (env) {
themes/rubylearning/js/prism-markdown.js:282:					// this might be a language that Prism does not support
themes/rubylearning/js/prism-markdown.js:310:			var tokensCopy = [];
themes/rubylearning/js/prism-markdown.js:317:					var grammar = Prism.languages[codeLang];
themes/rubylearning/js/prism-markdown.js:321:							if (Prism.languages[alias]) {
themes/rubylearning/js/prism-markdown.js:322:								grammar = Prism.languages[alias];
themes/rubylearning/js/prism-markdown.js:330:						grammar = Prism.languages.clike;
themes/rubylearning/js/prism-markdown.js:336:					token.content = Prism.highlight(value, grammar, codeLang);
themes/rubylearning/js/prism-markdown.js:339:				tokensCopy.push(token);
themes/rubylearning/js/prism-markdown.js:342:			return tokensCopy;
themes/rubylearning/js/prism-markdown.js:346:			if (Prism.languages[id]) {
themes/rubylearning/js/prism-markdown.js:349:			for (var langId in Prism.languages) {
themes/rubylearning/js/prism-markdown.js:350:				var lang = Prism.languages[langId];
themes/rubylearning/js/prism-markdown.js:365:	Prism.hooks.add('wrap', function (env) {
themes/rubylearning/js/prism-markdown.js:373:			var match = /language-(.+)/.exec(cls);
themes/rubylearning/js/prism-markdown.js:380:		var grammar = Prism.languages[codeLang];
themes/rubylearning/js/prism-markdown.js:383:			if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {
themes/rubylearning/js/prism-markdown.js:387:				Prism.plugins.autoloader.loadLanguages(codeLang, function () {
themes/rubylearning/js/prism-markdown.js:390:						ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);
themes/rubylearning/js/prism-markdown.js:397:	// Customize Prism for Markdown
themes/rubylearning/js/prism-markdown.js:398:	Prism.languages.md = Prism.languages.markdown;
themes/rubylearning/js/prism-markdown.js:400:}(Prism));
lib/typophic/commands/new.rb:15:      def self.run(argv)
lib/typophic/commands/new.rb:30:        Generator.new(options).run
lib/typophic/commands/new.rb:37:          opts.on("--name NAME", "Display name of the site") { |name| options[:name] = name }
lib/typophic/commands/new.rb:57:        def run
lib/typophic/commands/new.rb:63:          copy_runtime
lib/typophic/commands/new.rb:133:        def copy_runtime
lib/typophic/commands/new.rb:140:          warn "Warning: typophic binary not found for copying. Ensure this repository includes bin/typophic."
content/pages/tutorials/modules-and-mixins.md:28:```ruby-exec
content/pages/tutorials/modules-and-mixins.md:50:```ruby-exec
content/pages/tutorials/modules-and-mixins.md:73:```ruby-exec
content/pages/tutorials/modules-and-mixins.md:97:```ruby-exec
content/pages/tutorials/modules-and-mixins.md:132:At every point when your program is running, there is one and only one `self` - the current or default object accessible to you in your program:
content/pages/tutorials/modules-and-mixins.md:134:```ruby-exec
content/pages/tutorials/modules-and-mixins.md:170:```ruby-exec
content/pages/tutorials/modules-and-mixins.md:184:When you send a message to an object, the object executes the first method it finds on its method lookup path with the same name as the message. If no method is found, Ruby calls the `method_missing` method:
content/pages/tutorials/modules-and-mixins.md:186:```ruby-exec
content/pages/tutorials/modules-and-mixins.md:207:```ruby-exec
content/pages/tutorials/modules-and-mixins.md:235:```ruby-exec
content/pages/tutorials/modules-and-mixins.md:258:```ruby-exec
content/pages/blog.html.erb:34:          <p><%= truncate(strip_html(post.content), length: 160) %></p>
lib/typophic/commands/theme.rb:12:      def run(argv)
lib/typophic/commands/theme.rb:17:          New.new(argv).run
lib/typophic/commands/theme.rb:34:          Run `typophic theme new --help` for command-specific options.
lib/typophic/commands/theme.rb:59:        def run
lib/typophic/cli.rb:24:      new(argv).run
lib/typophic/cli.rb:31:    def run
lib/typophic/cli.rb:49:      handler.run(@argv)
lib/typophic/cli.rb:71:          deploy    Deploy the site or run pre-deploy steps
lib/typophic/cli.rb:76:        Run `typophic COMMAND --help` for command-specific options.
content/posts/2025-09-22-rails-learning-roadmap.md:20:- Install the recommended toolchain—Ruby, Rails, PostgreSQL, Node—and confirm `rails new` runs without errors.
content/pages/tutorials/classes-and-objects.md:17:    url: /posts/ruby-learning-playbook/
content/pages/tutorials/classes-and-objects.md:28:```ruby-exec
content/pages/tutorials/classes-and-objects.md:53:```ruby-exec
content/pages/tutorials/classes-and-objects.md:79:```ruby-exec
content/pages/tutorials/classes-and-objects.md:113:```ruby-exec
content/pages/tutorials/classes-and-objects.md:141:```ruby-exec
content/pages/tutorials/classes-and-objects.md:187:```ruby-exec
content/pages/tutorials/classes-and-objects.md:226:```ruby-exec
content/pages/tutorials/classes-and-objects.md:266:```ruby-exec
content/pages/tutorials/classes-and-objects.md:296:```ruby-exec
content/pages/tutorials/files-gems-next-steps.md:25:```ruby-exec
content/pages/tutorials/files-gems-next-steps.md:55:```ruby-exec
content/pages/tutorials/files-gems-next-steps.md:64:def highlight_top_performers(records)
content/pages/tutorials/files-gems-next-steps.md:76:highlight_top_performers(scores).each do |record|
content/pages/tutorials/files-gems-next-steps.md:88:```ruby-exec
content/pages/tutorials/files-gems-next-steps.md:98:    puts "Division operation completed."  # This always runs
content/pages/tutorials/files-gems-next-steps.md:121:```ruby-exec
content/pages/tutorials/files-gems-next-steps.md:144:```ruby-exec
content/pages/tutorials/files-gems-next-steps.md:176:```ruby-exec
content/pages/tutorials/files-gems-next-steps.md:209:```ruby-exec
content/pages/tutorials/files-gems-next-steps.md:244:```ruby-exec
content/pages/tutorials/files-gems-next-steps.md:245:# require - includes a file once during execution
content/pages/tutorials/meet-ruby.md:21:Ruby is a dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write. Everything in Ruby is an object—numbers, strings, even `true` and `false`. Start by making sure Ruby is installed (via `rbenv`, `rvm`, or the Windows installer), open a terminal, and run `irb` to explore interactively.
content/pages/tutorials/meet-ruby.md:23:```ruby-exec
content/pages/tutorials/meet-ruby.md:36:Ruby is an interpreted language that runs in your browser through our interactive widget. You can execute any Ruby code directly in the examples below without installing anything on your system. The browser widget uses Ruby WASM to run Ruby code safely and efficiently.
content/pages/tutorials/meet-ruby.md:40:Ruby executes from top to bottom—there is no `main` method—so keep each script focused on one idea. Try the interactive example below:
content/pages/tutorials/meet-ruby.md:42:```ruby-exec
content/pages/tutorials/meet-ruby.md:57:```ruby-exec
content/pages/tutorials/meet-ruby.md:67:```ruby-exec
content/pages/tutorials/meet-ruby.md:89:```ruby-exec
content/pages/tutorials/meet-ruby.md:112:- Try creating and running a simple Ruby script file
content/pages/tutorials/rails-routes-controllers.md:52:- Scaffold the `Entry` model with a migration and run `rails db:migrate`.
content/pages/tutorials/methods-and-blocks.md:28:```ruby-exec
content/pages/tutorials/methods-and-blocks.md:52:```ruby-exec
content/pages/tutorials/methods-and-blocks.md:78:```ruby-exec
content/pages/tutorials/methods-and-blocks.md:109:```ruby-exec
content/pages/tutorials/methods-and-blocks.md:149:```ruby-exec
content/pages/tutorials/methods-and-blocks.md:174:```ruby-exec
content/pages/tutorials/methods-and-blocks.md:196:```ruby-exec
content/pages/tutorials/methods-and-blocks.md:220:```ruby-exec
typophic.gemspec:23:  spec.executables   = ["typophic"]
typophic.gemspec:28:  spec.add_runtime_dependency "psych", ">= 4.0"
typophic.gemspec:29:  spec.add_runtime_dependency "listen", "~> 3.0"
README.md:3:Ruby Learning is a Typophic-powered static site that curates modern Ruby programming guides, tutorials, and reference material. The repository now revolves around a single `typophic` executable that drives builds, previews, deployments, and scaffolding—no auxiliary binaries required.
README.md:7:- `bin/` – home of the primary `typophic` executable
README.md:12:- `lib/` – Typophic runtime (builder, CLI commands, helpers)
README.md:23:### Runtime Layers
README.md:48:- `config.yml` declares the active theme (`theme: rubylearning`). Switch the value or run `typophic theme new <name>` to scaffold a fresh theme.
README.md:49:- The gemspec includes both runtime code and the default theme so external users can install from RubyGems and get a working starting point.
README.md:54:- During development run `bundle exec typophic build` or `typophic serve --build` to exercise the generator with real content.
README.md:55:- When Typophic is ready for wider use, `gem build typophic.gemspec` (and optionally `gem push`) publishes the runtime and default theme for other projects.
README.md:65:| `typophic deploy` | Either push `public/` to GitHub Pages or run a local preview loop |
README.md:75:bundle exec typophic build
README.md:85:When ready to distribute, run `gem build typophic.gemspec` (and `gem push` if publishing to RubyGems).
README.md:138:The generator mirrors the current repository layout, sets up sensible defaults in `config.yml`, and copies the `typophic` executable into the new project.
README.md:161:2. Run `typophic build` (or `typophic serve --build` for a hands-free preview).
content/pages/tutorials/flow-control-collections.md:26:```ruby-exec
content/pages/tutorials/flow-control-collections.md:50:```ruby-exec
content/pages/tutorials/flow-control-collections.md:72:```ruby-exec
content/pages/tutorials/flow-control-collections.md:99:```ruby-exec
content/pages/tutorials/flow-control-collections.md:126:```ruby-exec
content/pages/tutorials/flow-control-collections.md:162:```ruby-exec
content/pages/tutorials/flow-control-collections.md:188:```ruby-exec
content/pages/tutorials/flow-control-collections.md:215:```ruby-exec
content/pages/tutorials/flow-control-collections.md:237:```ruby-exec
content/pages/tutorials/flow-control-collections.md:265:```ruby-exec
lib/typophic/builder.rb:57:      copy_static_assets
lib/typophic/builder.rb:92:    def copy_static_assets
lib/typophic/builder.rb:94:        copy_asset_tree(File.join(@theme_path, asset_dir), asset_dir, "theme")
lib/typophic/builder.rb:95:        copy_asset_tree(File.join(@site_assets_dir, asset_dir), asset_dir, "site")
lib/typophic/builder.rb:99:    def copy_asset_tree(source, asset_dir, label)
lib/typophic/builder.rb:273:      # Handle code blocks - process ruby-exec separately from regular code blocks
lib/typophic/builder.rb:274:      # Protect ruby-exec blocks first to avoid interference from other processing
lib/typophic/builder.rb:275:      ruby_exec_blocks = []
lib/typophic/builder.rb:276:      html.gsub!(/```ruby-exec\n(.*?)```/m) do
lib/typophic/builder.rb:278:        placeholder = "\x00RUBYEXEC_#{ruby_exec_blocks.length}\x00"
lib/typophic/builder.rb:279:        ruby_exec_blocks << "<pre class=\"language-ruby\" data-executable=\"true\" contenteditable=\"true\" style=\"white-space: pre-wrap; outline: none;\"><code class=\"language-ruby-exec language-ruby\">#{ERB::Util.html_escape(code_content).gsub(/\r?\n/, "\n")}</code></pre>"
lib/typophic/builder.rb:294:      # Restore ruby-exec blocks
lib/typophic/builder.rb:295:      ruby_exec_blocks.each_with_index do |replacement, i|
lib/typophic/builder.rb:296:        html.gsub!("\x00RUBYEXEC_#{i}\x00", replacement)
